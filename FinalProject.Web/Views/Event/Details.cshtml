@model Event

@{
    ViewData["Title"] = "Event Details";
}

<div class="card rounded shadow p-4 event-details">
    <div class="border-bottom d-flex align-items-center justify-content-between mb-3">
        <h3>@Model.Title</h3>

        <a asp-action="Index" class="btn btn-sm btn-green" aria-label="event list">
            <i class="bi bi-list"></i>
            <span>Events</span>
        </a>
    </div>
    <div class="row">
        <!-- Details and Navigation -->
        <div class="col-8 d-flex flex-column justify-content-between">

            <!-- Event details -->
            <dl class="row details-text">

                <dt class="col-4 pb-1">Date & Time</dt>
                <dd class="col-8 pb-1">@Model.EventTime.ToString("MMM, dd, yyy - HH:mm")</dd>

                <dt class="col-4 pb-1">Location</dt>
                <dd class="col-8 pb-1">@Model.Location</dd>

                <dt class="col-4 pb-1">Description</dt>
                <dd class="col-8 pb-1">@Model.Description</dd>

                <dt class="col-4 pb-1">Created By</dt>
                <dd class="col-8 pb-1">Woof & Wander</dd>
            </dl>

            <!-- Navigation links -->
            <div>
                @if (User.IsInRole("admin"))
                {
                    <!-- Edit Button visible to admin and support -->
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-sm btn-secondary">
                        <i class="bi bi-pencil"></i>
                        <span>Edit</span>
                    </a>

                    <!-- Delete button visible to admin -->
                    <a asp-controller="Event" asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-sm btn-danger">
                        <i class="bi bi-trash"></i>
                        <span>Delete</span>
                    </a>
                }
            </div>
        </div>

        <!-- ImageUrl -->
        <div class="col-4">
            @if (!string.IsNullOrEmpty(Model.ImageUrl))
            {
                <img src="@Url.Content(Model.ImageUrl)" class="img-fluid w-50" alt="Event Location Image" />
            }
            else
            {
                <span class="text-muted" aria-label="missing location image">No image available</span>
            }
        </div>

        @* <div class="col-4">
        <img asp-condition="@(!string.IsNullOrEmpty(Model.ImageUrl))" src="@Model.ImageUrl" class="img-fluid w-50"
        alt="Event Location Image" />
        <span asp-condition="@string.IsNullOrEmpty(Model.ImageUrl)" class="text-muted"
        aria-label="missing location image">No image available</span>
        </div> *@

    </div>
</div>
</div>

<!--Registration section-->
@if (User.Identity.IsAuthenticated)
{
    @if (Model.EventTime > DateTime.Now.AddMinutes(30))
    {
        <div class="mt-4">
            <h4>Register for this Event</h4>
            <form id="registrationForm" method="post" asp-action="Register" asp-asp-controller="Event">
                <input type="hidden" name="EventId" value="@Model.Id">
                <button type="submit" class="btn btn-green">Register</button>
            </form>
        </div>
    }
    else
    {
        <p class="text-muted">Registration is closed for this event.</p>
    }
}
else
{
    <p class="text-muted">Please <a asp-asp-controller="User" asp-action="Login">Login</a> to register for this event.</p>
}

<!-- Display registrationForm Count-->
<div class="mt-3">
    <h5>Attendees: @Model?.Registrations?.Count</h5>
</div>

<!-- google Maps -->
<div class="map-container">
    <iframe width="100%" height="500" style="border:0" loading="lazy" allowfullscreen
        referrerpolicy="no-referrer-when-downgrade" src="https://www.google.com/maps/embed/v1/place?key=AIzaSyCstGVlyhTD5N91MuAWtSFum407hgO8Wxo
    &q==@Uri.EscapeDataString(Model.Location)">
    </iframe>
</div>

<!-- Reviews -->
<div class="card rounded shadow p-4 mt-4">
    <partial name="_Reviews" />
</div>
<partial name="_DeleteModal" />
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

@* @await Html.PartialAsync("_CreateReviewModal", new Review { EventId = Model.Id }) *@